package it.academy.commands;

import it.academy.commands.address.DeleteAddress;
import it.academy.commands.address.GetAddresses;
import it.academy.commands.address.NewAddress;
import it.academy.commands.address.UpdateAddress;
import it.academy.commands.creditCard.DeleteCreditCard;
import it.academy.commands.creditCard.GetCreditCards;
import it.academy.commands.creditCard.NewCreditCard;
import it.academy.commands.creditCard.UpdateCreditCard;
import it.academy.commands.customer.DeleteCustomer;
import it.academy.commands.customer.GetCustomers;
import it.academy.commands.customer.NewCustomer;
import it.academy.commands.customer.UpdateCustomer;
import it.academy.commands.discount.DeleteDiscount;
import it.academy.commands.discount.GetDiscounts;
import it.academy.commands.discount.NewDiscount;
import it.academy.commands.discount.UpdateDiscount;
import it.academy.commands.machine.DeleteMachine;
import it.academy.commands.machine.DeleteMachineProduct;
import it.academy.commands.machine.GetMachineProducts;
import it.academy.commands.machine.GetMachines;
import it.academy.commands.machine.NewMachine;
import it.academy.commands.machine.NewMachineProduct;
import it.academy.commands.machine.UpdateMachine;
import it.academy.commands.model.DeleteModel;
import it.academy.commands.model.GetModels;
import it.academy.commands.model.NewModel;
import it.academy.commands.model.UpdateModel;
import it.academy.commands.order.ChooseMachine;
import it.academy.commands.order.ChooseProduct;
import it.academy.commands.order.ChooseTypePay;
import it.academy.commands.order.MainOrder;
import it.academy.commands.order.NewOrder;
import it.academy.commands.product.DeleteProduct;
import it.academy.commands.product.GetProducts;
import it.academy.commands.product.NewProduct;
import it.academy.commands.product.UpdateProduct;
import it.academy.commands.purchase.DeletePurchase;
import it.academy.commands.purchase.GetPurchases;
import it.academy.commands.purchase.NewPurchase;
import it.academy.commands.purchase.UpdatePurchase;
import it.academy.commands.role.DeleteRole;
import it.academy.commands.role.GetRoles;
import it.academy.commands.role.NewRole;
import it.academy.commands.role.UpdateRole;
import it.academy.commands.typePayment.DeleteTypePayment;
import it.academy.commands.typePayment.GetTypePayments;
import it.academy.commands.typePayment.NewTypePayment;
import it.academy.commands.typePayment.UpdateTypePayment;
import it.academy.commands.user.EditRolesUser;
import it.academy.commands.user.EditUserPassword;
import it.academy.commands.user.GetUsers;
import it.academy.commands.user.NewUser;

import java.util.HashMap;

import static it.academy.utils.constants.DataUI.COMMAND_ADDRESSES;
import static it.academy.utils.constants.DataUI.COMMAND_CHANGE_PASSWORD;
import static it.academy.utils.constants.DataUI.COMMAND_CHOOSE_MACHINE;
import static it.academy.utils.constants.DataUI.COMMAND_CHOOSE_PRODUCT;
import static it.academy.utils.constants.DataUI.COMMAND_CHOOSE_TYPE_PAY;
import static it.academy.utils.constants.DataUI.COMMAND_CREDIT_CARDS;
import static it.academy.utils.constants.DataUI.COMMAND_CUSTOMERS;
import static it.academy.utils.constants.DataUI.COMMAND_DELETE_ADDRESS;
import static it.academy.utils.constants.DataUI.COMMAND_DELETE_CREDIT_CARD;
import static it.academy.utils.constants.DataUI.COMMAND_DELETE_CUSTOMER;
import static it.academy.utils.constants.DataUI.COMMAND_DELETE_DISCOUNT;
import static it.academy.utils.constants.DataUI.COMMAND_DELETE_MACHINE;
import static it.academy.utils.constants.DataUI.COMMAND_DELETE_MACHINE_PRODUCT;
import static it.academy.utils.constants.DataUI.COMMAND_DELETE_MODEL;
import static it.academy.utils.constants.DataUI.COMMAND_DELETE_PAYMENT;
import static it.academy.utils.constants.DataUI.COMMAND_DELETE_PRODUCT;
import static it.academy.utils.constants.DataUI.COMMAND_DELETE_PURCHASE;
import static it.academy.utils.constants.DataUI.COMMAND_DELETE_ROLE;
import static it.academy.utils.constants.DataUI.COMMAND_DISCOUNTS;
import static it.academy.utils.constants.DataUI.COMMAND_EDIT_ADDRESS;
import static it.academy.utils.constants.DataUI.COMMAND_EDIT_CREDIT_CARD;
import static it.academy.utils.constants.DataUI.COMMAND_EDIT_CUSTOMER;
import static it.academy.utils.constants.DataUI.COMMAND_EDIT_DISCOUNT;
import static it.academy.utils.constants.DataUI.COMMAND_EDIT_MACHINE;
import static it.academy.utils.constants.DataUI.COMMAND_EDIT_MODEL;
import static it.academy.utils.constants.DataUI.COMMAND_EDIT_PAYMENT;
import static it.academy.utils.constants.DataUI.COMMAND_EDIT_PRODUCT;
import static it.academy.utils.constants.DataUI.COMMAND_EDIT_PURCHASE;
import static it.academy.utils.constants.DataUI.COMMAND_EDIT_USER_PASS;
import static it.academy.utils.constants.DataUI.COMMAND_EDIT_USER_ROLES;
import static it.academy.utils.constants.DataUI.COMMAND_LOGIN;
import static it.academy.utils.constants.DataUI.COMMAND_LOGOUT;
import static it.academy.utils.constants.DataUI.COMMAND_MACHINES;
import static it.academy.utils.constants.DataUI.COMMAND_MACHINE_PRODUCTS;
import static it.academy.utils.constants.DataUI.COMMAND_MAIN;
import static it.academy.utils.constants.DataUI.COMMAND_MAIN_ORDER;
import static it.academy.utils.constants.DataUI.COMMAND_MODELS;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_ADDRESS;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_CREDIT_CARD;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_CUSTOMER;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_DISCOUNT;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_MACHINE;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_MACHINE_PRODUCT;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_MODEL;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_ORDER_PAY;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_PAYMENT;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_PRODUCT;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_PURCHASE;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_ROLE;
import static it.academy.utils.constants.DataUI.COMMAND_NEW_USER;
import static it.academy.utils.constants.DataUI.COMMAND_PAYMENTS;
import static it.academy.utils.constants.DataUI.COMMAND_PRODUCTS;
import static it.academy.utils.constants.DataUI.COMMAND_PROFILE;
import static it.academy.utils.constants.DataUI.COMMAND_PURCHASES;
import static it.academy.utils.constants.DataUI.COMMAND_REG;
import static it.academy.utils.constants.DataUI.COMMAND_ROLES;
import static it.academy.utils.constants.DataUI.COMMAND_UPDATE_ROLE;
import static it.academy.utils.constants.DataUI.COMMAND_USERS;

public final class CommandFactory {
    private static CommandFactory instance;
    private static final HashMap<String, Command> commands = new HashMap<>();

    private CommandFactory() {
        commands.put(COMMAND_MAIN, new MainPage());
        commands.put(COMMAND_REG, new Registration());
        commands.put(COMMAND_LOGIN, new Login());
        commands.put(COMMAND_LOGOUT, new Logout());
        commands.put(COMMAND_PROFILE, new Profile());
        commands.put(COMMAND_CHANGE_PASSWORD, new ChangePassword());
        commands.put(COMMAND_ROLES, new GetRoles());
        commands.put(COMMAND_NEW_ROLE, new NewRole());
        commands.put(COMMAND_UPDATE_ROLE, new UpdateRole());
        commands.put(COMMAND_DELETE_ROLE, new DeleteRole());
        commands.put(COMMAND_USERS, new GetUsers());
        commands.put(COMMAND_NEW_USER, new NewUser());
        commands.put(COMMAND_EDIT_USER_PASS, new EditUserPassword());
        commands.put(COMMAND_EDIT_USER_ROLES, new EditRolesUser());
        commands.put(COMMAND_CREDIT_CARDS, new GetCreditCards());
        commands.put(COMMAND_NEW_CREDIT_CARD, new NewCreditCard());
        commands.put(COMMAND_EDIT_CREDIT_CARD, new UpdateCreditCard());
        commands.put(COMMAND_DELETE_CREDIT_CARD, new DeleteCreditCard());
        commands.put(COMMAND_ADDRESSES, new GetAddresses());
        commands.put(COMMAND_NEW_ADDRESS, new NewAddress());
        commands.put(COMMAND_EDIT_ADDRESS, new UpdateAddress());
        commands.put(COMMAND_DELETE_ADDRESS, new DeleteAddress());
        commands.put(COMMAND_MODELS, new GetModels());
        commands.put(COMMAND_NEW_MODEL, new NewModel());
        commands.put(COMMAND_EDIT_MODEL, new UpdateModel());
        commands.put(COMMAND_DELETE_MODEL, new DeleteModel());
        commands.put(COMMAND_PRODUCTS, new GetProducts());
        commands.put(COMMAND_NEW_PRODUCT, new NewProduct());
        commands.put(COMMAND_EDIT_PRODUCT, new UpdateProduct());
        commands.put(COMMAND_DELETE_PRODUCT, new DeleteProduct());
        commands.put(COMMAND_CUSTOMERS, new GetCustomers());
        commands.put(COMMAND_NEW_CUSTOMER, new NewCustomer());
        commands.put(COMMAND_EDIT_CUSTOMER, new UpdateCustomer());
        commands.put(COMMAND_DELETE_CUSTOMER, new DeleteCustomer());
        commands.put(COMMAND_MACHINES, new GetMachines());
        commands.put(COMMAND_NEW_MACHINE, new NewMachine());
        commands.put(COMMAND_EDIT_MACHINE, new UpdateMachine());
        commands.put(COMMAND_DELETE_MACHINE, new DeleteMachine());
        commands.put(COMMAND_MACHINE_PRODUCTS, new GetMachineProducts());
        commands.put(COMMAND_NEW_MACHINE_PRODUCT, new NewMachineProduct());
        commands.put(COMMAND_DELETE_MACHINE_PRODUCT, new DeleteMachineProduct());
        commands.put(COMMAND_DISCOUNTS, new GetDiscounts());
        commands.put(COMMAND_NEW_DISCOUNT, new NewDiscount());
        commands.put(COMMAND_EDIT_DISCOUNT, new UpdateDiscount());
        commands.put(COMMAND_DELETE_DISCOUNT, new DeleteDiscount());
        commands.put(COMMAND_PAYMENTS, new GetTypePayments());
        commands.put(COMMAND_NEW_PAYMENT, new NewTypePayment());
        commands.put(COMMAND_EDIT_PAYMENT, new UpdateTypePayment());
        commands.put(COMMAND_DELETE_PAYMENT, new DeleteTypePayment());
        commands.put(COMMAND_PURCHASES, new GetPurchases());
        commands.put(COMMAND_NEW_PURCHASE, new NewPurchase());
        commands.put(COMMAND_EDIT_PURCHASE, new UpdatePurchase());
        commands.put(COMMAND_DELETE_PURCHASE, new DeletePurchase());
        commands.put(COMMAND_MAIN_ORDER, new MainOrder());
        commands.put(COMMAND_CHOOSE_MACHINE, new ChooseMachine());
        commands.put(COMMAND_CHOOSE_PRODUCT, new ChooseProduct());
        commands.put(COMMAND_CHOOSE_TYPE_PAY, new ChooseTypePay());
        commands.put(COMMAND_NEW_ORDER_PAY, new NewOrder());
    }

    public static CommandFactory getInstance() {
        if (instance == null) {
            instance = new CommandFactory();
        }
        return instance;
    }

    public Command getCommand(String value) {
        return commands.get(value);
    }
}
